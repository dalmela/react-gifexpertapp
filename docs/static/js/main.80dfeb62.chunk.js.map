{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKlB,SACE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACL,mCACRC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACL,oCADK,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAACC,GAIxB,OAFAC,QAAQC,IAAIF,GAGR,sBAAKG,UAAU,2EAAf,UACI,qBAAKC,IAAKJ,EAAMd,IAAKmB,IAAKL,EAAMJ,QAChC,4BAAII,EAAMJ,YCJTU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfDC,qBAAU,WAEL3B,EAAQC,GACP2B,MAAK,SAAAC,GACFC,YAAW,WACPZ,QAAQC,IAAIU,GACZH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,MAEd,UAGR,CAACvB,IAEGwB,EDjBiBM,CAAa9B,GAA9BO,EAAP,EAAOA,KAAMgB,EAAb,EAAaA,QAgBb,OACI,qCACA,6BAAKvB,IACHuB,GAAW,wCACX,qBAAKJ,UAAU,YAAf,SAEUZ,EAAKE,KAAI,SAAAC,GACL,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aECtCoB,EA1BM,WAGjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmBC,EAAnB,KAOA,OACI,qCACA,8CACA,cAAC,EAAD,CAAahD,WAAYgD,IACzB,uBACA,6BAEQD,EAAWvB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjBzCkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80dfeb62.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({categorias}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            categorias(cats => [inputValue, ...cats]) ;\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    categorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const apiKey ='suB9wE5gxPYIRMjjAJWhrzlj56J6RiX5'; \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s animate__fadeIn\">\r\n            <img src={props.url} alt={props.title} />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    // console.log(state);\r\n\r\n    //const [images, setImages] = useState([]);\r\n\r\n    //SÃ³lo se ejecuta cuando el componente es renderizado por primera vez\r\n    // ponemos como dependencias [] \r\n    //useEffect(() => {\r\n    //    getGifs(category).then(imgs => setImages(imgs));\r\n    //}, [category]);\r\n    \r\n   \r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p>Loading</p> }\r\n        { <div className=\"card-grid\">\r\n                {\r\n                    data.map(img => {\r\n                        return <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n        </div> }\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n   useEffect(() => {\r\n\r\n        getGifs(category)\r\n        .then(imgs =>  {\r\n            setTimeout(() => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 3000);\r\n        })\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","\r\nimport {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One punch','Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    //const handleAdd = (e) => {\r\n        //setCategories([...categories, 'HunterXHunter']);\r\n        //setCategories( cats => [...cats, 'HunterXHunter']);\r\n    //};\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory categorias={setCategories}/>\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map(category => {\r\n                    return <GifGrid key={category} category={category} />\r\n                })\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}